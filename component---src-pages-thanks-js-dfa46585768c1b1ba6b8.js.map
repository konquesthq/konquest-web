{"version":3,"sources":["webpack:///./src/pages/thanks.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/nav.js","webpack:///./src/components/header.js","webpack:///./src/components/seo.js","webpack:///./src/components/info.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_info__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","ThanksPage","a","createElement","title","d","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","NavLink","path","react_default","es","_ref2","selectedClass","replace","gatsby_browser_entry","to","className","node","Nav","nav_NavLink","Header","components_nav","href","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","_header__WEBPACK_IMPORTED_MODULE_2__","Info"],"mappings":"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","file":"component---src-pages-thanks-js-dfa46585768c1b1ba6b8.js","sourcesContent":["import React from \"react\"\nimport Info from \"../components/info\"\nimport SEO from \"../components/seo\"\n\nconst ThanksPage = () => (\n  <Info>\n    <SEO title=\"Thank You\" />\n    <h1>Message Received, Thank You</h1>\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed pretium orci magna, eu rutrum nulla volutpat eget.</p>\n  </Info>\n);\n\nexport default ThanksPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import {Link} from 'gatsby';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './nav.scss';\nimport {Location} from '@reach/router';\n\nconst NavLink = ({path, children}) => {\n  return (\n    <Location>\n      {\n        ({location}) => {\n          const currentPath = location.pathname.replace('/konquest-web', ''); // hack for hosting on gh-pages\n          const isSelected = currentPath === path;\n          const selectedClass = isSelected ? \"selected\" : null;\n          return <Link to={path} className={selectedClass}>{children}</Link>\n        }\n      }\n    </Location>\n  );\n};\n\nconst Nav = () => {\n  return (\n    <nav>\n      <NavLink path=\"/\">Home</NavLink>\n      <NavLink path=\"/pricing/\">Pricing</NavLink>\n      <NavLink path=\"/resources/\">Resources</NavLink>\n      <NavLink path=\"/contact/\">Contact</NavLink>\n    </nav>\n  )\n};\n\nNavLink.propTypes = {\n  path: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired\n};\n\nexport default Nav;","import {Link} from \"gatsby\"\nimport React from \"react\"\nimport Nav from \"./nav\";\n\nimport './header.scss';\n\nconst Header = () => (\n  <header className=\"site-header\">\n    <div className=\"logo\">\n      <Link to='/'>\n        Konquest\n      </Link>\n    </div>\n    <Nav />\n    <a href=\"https://app.konquest.io\" className=\"sign-in\">Sign In</a>\n  </header>\n);\n\nexport default Header\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Header from './header';\n\nimport './info.scss';\n\nconst Info = ({children, className}) => (\n  <div className={`site-container info ${className ? className : ''}`}>\n    <Header/>\n    <main>\n      <div className=\"contents\">\n        {children}\n      </div>\n    </main>\n  </div>\n);\n\nInfo.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default Info;\n"],"sourceRoot":""}
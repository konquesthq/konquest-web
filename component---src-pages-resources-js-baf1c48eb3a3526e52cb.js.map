{"version":3,"sources":["webpack:///./src/pages/resources.js","webpack:///./src/components/seo.js","webpack:///./src/components/requestDemo.js","webpack:///./src/components/resourceItem.js"],"names":["ResourceListPage","render","resourceItems","this","props","data","allContentfulResourceItem","edges","extraResourceItems","length","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","slice","map","_ref","node","key","id","_components_resourceItem__WEBPACK_IMPORTED_MODULE_5__","resourceItem","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","title","keywords","_ref2","_components_requestDemo__WEBPACK_IMPORTED_MODULE_4__","React","Component","resourceQuery","SEO","description","lang","meta","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","RequestDemo","type","d","__webpack_exports__","ResourceItem","gatsby_image__WEBPACK_IMPORTED_MODULE_0__","gatsby_image__WEBPACK_IMPORTED_MODULE_0___default","gatsby__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","fluid","headerImage","to","ShortResourceItem"],"mappings":"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","file":"component---src-pages-resources-js-baf1c48eb3a3526e52cb.js","sourcesContent":["import React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport RequestDemo from \"../components/requestDemo\";\nimport ShortResourceItem, {ResourceItem} from \"../components/resourceItem\";\nimport './resources.scss';\n\nclass ResourceListPage extends React.Component {\n  render() {\n    const resourceItems = this.props.data.allContentfulResourceItem.edges;\n    let extraResourceItems = null;\n    if (resourceItems.length > 3) {\n      extraResourceItems = (\n        <ul className=\"resource-items\">\n          {resourceItems\n            .slice(3)\n            .map(({node}) => (\n              <li key={node.id}>\n                <ShortResourceItem resourceItem={node}/>\n              </li>\n            ))}\n        </ul>\n      );\n    }\n    return (\n      <Layout className=\"resources\">\n        <SEO title=\"Resources\" keywords={[`resources`, `blog`]}/>\n        <h1>Resources</h1>\n        <div className=\"contents\">\n          <div>\n            <ul className=\"resource-items\">\n              {resourceItems\n                .slice(0, 3)\n                .map(({node}) => (\n                  <li key={node.id}>\n                    <ResourceItem resourceItem={node}/>\n                  </li>\n                ))}\n            </ul>\n            {extraResourceItems}\n          </div>\n        </div>\n        <RequestDemo/>\n      </Layout>\n    )\n  }\n}\n\nexport default ResourceListPage\n\nexport const resourceQuery = graphql`\n  {\n    allContentfulResourceItem(sort: { fields: [createdAt], order: [DESC]}) {\n      edges {\n        node {\n          id,\n          title,\n          description {\n            description\n          },\n          headerImage {\n            fluid(maxWidth: 440, maxHeight: 241) {\n              ...GatsbyContentfulFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`;","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from \"react\"\n\nimport './requestDemo.scss';\n\nconst RequestDemo = () => (\n  <div className=\"request-demo\">\n    <div className=\"demo-details\">\n      <p>Ut porttitor massa tellus, sit amet tempor nibh tincidunt eget. Cras volutpat interdum sem vitae vulputate.\n        Morbi a dolor ut nisl ullamcorper tempor. Proin est ante, aliquet sed.</p>\n      <button type=\"button\">Request Demo</button>\n    </div>\n  </div>\n);\n\nexport default RequestDemo\n","import Img from \"gatsby-image\";\nimport {Link} from \"gatsby\";\nimport React from \"react\";\n\nimport './resourceItem.scss';\n\nexport const ResourceItem = ({resourceItem}) => (\n  <div className=\"resource-item\">\n    <Img fluid={resourceItem.headerImage.fluid} />\n    <div className=\"details\">\n      <h2>{resourceItem.title}</h2>\n      <p>Etiam in faucibus lectus, ut lobortis ex. Pellentese habitant morbi tristique senectus et netus. Prae interdum\n        sed sapien consequat tincidunt. </p>\n      <Link to={`/resources/${resourceItem.id}`}>Read More</Link>\n    </div>\n  </div>\n);\n\nconst ShortResourceItem = ({resourceItem}) => (\n  <div className=\"resource-item short\">\n    <div className=\"details\">\n      <h2>{resourceItem.title}</h2>\n      <p>Etiam in faucibus lectus, ut lobortis ex. Pellentese habitant morbi tristique senectus et netus. Prae interdum\n        sed sapien consequat tincidunt. </p>\n      <Link to={`/resources/${resourceItem.id}`}>Read More</Link>\n    </div>\n  </div>\n);\n\nexport default ShortResourceItem;"],"sourceRoot":""}